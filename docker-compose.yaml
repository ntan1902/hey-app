version: "3.7"
services:
  # hey-frontend:
  #   container_name: hey-frontend
  #   build:
  #     context: ./hey-frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - "./hey-frontend:/app"
  #     - "/app/node_modules"
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production
  hey-mysql:
    image: mysql:latest
    container_name: hey-mysql
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_DATABASE=hey_app"
      - "MYSQL_PASSWORD=root"
      - "TZ=Asia/Ho_Chi_Minh"
    ports:
      - "6603:3306"
    volumes:
      - /mysql
    restart: always
    cap_add:
      - SYS_NICE

  hey-redis:
    container_name: hey-redis
    image: redis:latest
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - hey-redis-data:/data
    networks:
      - backend-network

  hey-registry:
    container_name: hey-registry
    image: hey-registry
    hostname: hey-registry
    build:
      context: ./hey-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    volumes:
      - "~/.m2:/root/.m2"

    restart: always

  hey-auth:
    image: hey-auth
    container_name: hey-auth
    hostname: hey-auth
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://hey-mysql:3306/hey_app?allowPublicKeyRetrieval=true&autoReconnect=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://hey-registry:8761/eureka
    build:
      context: ./hey-auth
      dockerfile: Dockerfile
    depends_on:
      - "hey-registry"
      - "hey-mysql"
    
    ports:
      - "7070:7070"
    volumes:
      - "/hey-auth-log:/log"
      - "~/.m2:/root/.m2"

  hey-chat:
    container_name: hey-chat
    image: hey-chat
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://hey-registry:8761/eureka
    build:
      context: ./hey-chat
      dockerfile: Dockerfile
    volumes:
      - "hey-chat-log:/log"
    networks:
      - backend-network
    depends_on:
      - "hey-registry"
      - "hey-auth"
      - "hey-redis"
    ports:
      - "8080:8080"
      - "8090:8090"
    restart: always
    # command: 
    #   ["./wait-for-it.sh", "hey-auth:7070", "--", "echo", "hey-auth is up"]
    environment:
      WAIT_HOSTS: hey-auth:7070
      ENV: production
      VERTX_DISABLEDNSRESOLVER=: 'true'

  # hey-payment:
  #   image: hey-payment
  #   container_name: hey-payment
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://hey-mysql:3306/hey_app?allowPublicKeyRetrieval=true&autoReconnect=true&useSSL=false
  #     SPRING_DATASOURCE_USERNAME: root
  #     SPRING_DATASOURCE_PASSWORD: root
  #     EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://hey-registry:8761/eureka
  #   build:
  #     context: ./hey-payment
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - "hey-registry"
  #     - "hey-mysql"
  #     - "hey-auth"
  #   ports:
  #     - "9090:9090"
  #   restart: always
  #   volumes:
  #     - "/hey-payment-log:/log"

  # hey-lucky:
  #   image: hey-lucky
  #   container_name: hey-lucky
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://hey-mysql:3306/hey_app?allowPublicKeyRetrieval=true&autoReconnect=true&useSSL=false
  #     SPRING_DATASOURCE_USERNAME: root
  #     SPRING_DATASOURCE_PASSWORD: root
  #     EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://hey-registry:8761/eureka
  #   build:
  #     context: ./hey-lucky
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - "hey-registry"
  #     - "hey-mysql"
  #     - "hey-auth"
  #     - "hey-payment"
  #   ports:
  #     - "6060:6060"
  #   restart: always
  #   volumes:
  #     - "/hey-lucky-log:/log"

  hey-gateway:
    image: hey-gateway
    container_name: hey-gateway
    hostname: hey-gateway
    build:
      context: ./hey-gateway
      dockerfile: Dockerfile
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://hey-registry:8761/eureka
    depends_on:
      - "hey-registry"
      - "hey-chat"
      - "hey-auth"
      # - "hey-payment"
      # - "hey-lucky"
    ports:
      - "5050:5050"
    volumes:
      - "~/.m2:/root/.m2"
    restart: always

networks:
  backend-network:
    driver: bridge

volumes:
  hey-redis-data:
  hey-chat-log:
  hey-auth-log:
  hey-payment-log:
  hey-lucky-log:
