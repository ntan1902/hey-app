openapi: 3.0.0
info:
  version: "1.0"
  title: "ZaloPay "
  description: BigAssignment
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/oispmdp/BigAssignment/1.0

tags:
  - name: Auth Service
    description: API of Auth Service
  - name: Payment Service
    description: API of Payment Service
  - name: LuckyMoney Service
    description: API of LuckMoney Service
paths:
  ### Authentication Service

  # User login to the app
  /auth/api/v1/users/login:
    post:
      tags:
        - Auth Service
      description: >-
        Login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginForm"
        description: User login to the app
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "401":
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"

  # User register to the app
  /auth/api/v1/users/register:
    post:
      tags:
        - Auth Service
      description: >-
        Register to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterForm"
        description: User login to the app
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 201
                    example: 201
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # User get info
  /auth/api/v1/users/getInfo:
    get:
      tags:
        - Auth Service
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      description: >-
        Return user info mation
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    $ref: "#/components/schemas/UserDTO"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Create Pin for User
  /auth/api/v1/users/createPin:
    post:
      tags:
        - Auth Service
      description: >-
        User Create Pin
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pin
              properties:
                pin:
                  type: string
                  example: "iqewbfj9395fbs932004f5bhjkfbvew894bt75btc5nt79 9c8nmtvn5m9oc5gl983hcrf57890o32d5900a422750fe0ab1"
        description: Create User Pin
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 201
                    example: 201
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Has Pin for User
  /auth/api/v1/users/hasPin:
    post:
      tags:
        - Auth Service
      description: >-
        User Has Pin
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pin
              properties:
                pin:
                  type: string
                  example: "iqewbfj9395fbs932004f5bhjkfbvew894bt75btc5nt79 9c8nmtvn5m9oc5gl983hcrf57890o32d5900a422750fe0ab1"
        description: User Has Pin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    properties:
                      hasPin:
                        type: boolean
                        example: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Generate Soft Token
  /auth/api/v1/users/createSoftTokenByPin:
    post:
      tags:
        - Auth Service
      description: >-
        User Create Pin
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pin
              properties:
                pin:
                  type: string
                  example: "iqewbfj9395fbs932004f5bhjkfbvew894bt75btc5nt79 9c8nmtvn5m9oc5gl983hcrf57890o32d5900a422750fe0ab1"
                amount:
                  type: number
                  example: 1000
        description: Create Soft Token Pin
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 201
                    example: 201
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    properties:
                      softToken:
                        type: string
                        example: "abdbfdbfdgret4543543treg"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Get username
  /auth/api/v1/users/getUsername/{userId}:
    get:
      tags:
        - Auth Service
      description: >-
        Get Username
      parameters:
        - name: userId
          in: path
          required: true
          description: User Id
          schema:
            type: string
            example: "uuid"
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    properties:
                      username:
                        type: string
                        example: "ntan"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Change password
  /auth/api/v1/users/changePassword:
    patch:
      tags:
        - Auth Service
      description: >-
        User Change Password
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - oldPassword
                - confirmPassword
              properties:
                password:
                  type: string
                  example: "123456"
                oldPassword:
                  type: string
                  example: "1234"
                confirmPassword:
                  type: string
                  example: "123456"
        description: Change Password
      responses:
        "204":
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 204
                    example: 204
                  message:
                    type: string
                    default: "Change password successfully"
                  payload:
                    type: object
                    default: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Change pin
  /auth/api/v1/users/changePin:
    patch:
      tags:
        - Auth Service
      description: >-
        User Change Pin
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pin
                - oldPin
                - confirmPin
              properties:
                pin:
                  type: string
                  example: "123456"
                oldPin:
                  type: string
                  example: "1234"
                confirmPin:
                  type: string
                  example: "123456"
        description: Change Pin
      responses:
        "204":
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 204
                    example: 204
                  message:
                    type: string
                    default: "Change pin successfully"
                  payload:
                    type: object
                    default: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Refresh token
  /auth/api/v1/users/refreshToken:
    post:
      tags:
        - Auth Service
      description: >-
        User Refresh Token

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pin
                - oldPin
                - confirmPin
              properties:
                refreshToken:
                  type: string
                  example: "abc"

        description: Refresh token
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 201
                    example: 201
                  message:
                    type: string
                    default: "Change pin successfully"
                  payload:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: "abcbb"
                      tokenType:
                        type: string
                        example: "Bearer"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # User logout
  /auth/api/v1/users/logout:
    post:
      tags:
        - Auth Service
      description: >-
        Logout the system
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: "abc"
        description: User logout the app
      responses:
        "204":
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 204
                    example: 204
                  message:
                    type: string
                    default: "Logout successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Search User
  /auth/api/v1/users/searchUser:
    get:
      tags:
        - Auth Service
      description: >-
        Return user information list
      parameters:
        - name: key
          in: path
          required: true
          description: Key searching for full name or email
          schema:
            type: string
            example: "an"
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserDTO"

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # User update avatar
  /auth/api/v1/users/updateAvatar:
    post:
      tags:
        - Auth Service
      description: >-
        Update Avatar
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uri:
                  type: string
                  example: "abc"
                mediumUri:
                  type: string
                  example: "abc"
                smallUri:
                  type: string
                  example: "abc"
        description: User update avatar in the app
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Update avatar successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # User upload image
  /auth/api/v1/users/uploadImage:
    post:
      tags:
        - Auth Service
      description: >-
        Upload Image
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: object
                  format: base64

        description: User upload image in the app
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Upload successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # System login
  /auth/api/v1/systems/login:
    post:
      tags:
        - Auth Service
      description: >-
        Login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceLoginForm"
        description: System login to the app
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Upload successfully"
                  payload:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: "ada7da8sd8as8d7asd88as8d8asd8asd6"
                      tokenType:
                        type: string
                        example: "Bearer"
        "401":
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"

  # System authorizes user
  /auth/api/v1/systems/authorizeUser:
    post:
      tags:
        - Auth Service
      description: >-
        Request Auth Service to Authorize User Token
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizeUserRequest"
        description: Authorize user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: ""
                  payload:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: "uuid"

        "401":
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"

  # System authorizes system
  /auth/api/v1/systems/authorizeSystem:
    post:
      tags:
        - Auth Service
      description: >-
        Request Auth Service to Authorize System Token
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizeSystemRequest"
        description: Authorize system
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: ""
                  payload:
                    type: object
                    properties:
                      systemId:
                        type: string
                        example: "uuid"

        "401":
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"

  # Authenticate soft token from user
  /auth/api/v1/systems/authorizeSoftToken:
    post:
      tags:
        - Auth Service
      description: >-
        Request Auth Service to Authorize System Token
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                softToken:
                  type: string
                  example: "abc"
        description: Authorize system
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: ""
                  payload:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: "uuid"
                      amount:
                        type: number
                        example: 1000

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Get System's information
  /auth/api/v1/systems/getSystemInfo/{systemId}:
    get:
      tags:
        - Auth Service
      description: >-
        Request Auth Service to Get System Info
      parameters:
        - in: path
          name: systemId
          schema:
            type: string
          required: true
          description: Id of system
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: ""
                  payload:
                    $ref: "#/components/schemas/SystemDTO"

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Get User's information
  /auth/api/v1/systems/getUserInfo/{userId}:
    get:
      tags:
        - Auth Service
      description: >-
        Request Auth Service to Get User Info
      parameters:
        - in: path
          name: userId
          schema:
            type: number
          required: true
          description: Id of owner
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: ""
                  payload:
                    $ref: "#/components/schemas/UserDTO"

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Get system list
  /auth/api/v1/systems/getSystems:
    get:
      tags:
        - Auth Service
      description: >-
        Request Auth Service to Get System Info
      parameters:
        - in: path
          name: systemId
          schema:
            type: number
          required: true
          description: Id of system
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: ""
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemDTO"

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  # Edit profile
  /auth/api/v1/systems/editProfile/{userId}:
    patch:
      tags:
        - Auth Service
      description: >-
        Request Auth Service to Edit User Profile
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: Id of user
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "ntan@gmail.com"
                fullName:
                  type: string
                  example: "Trinh An"
                dob:
                  type: string
                  example: "2000:02:02T19:02"
                phoneNumber:
                  type: string
                  example: "09340329408"
        description: Authorize system
      responses:
        "204":
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 204
                    example: 204
                  message:
                    type: string
                    default: "Edit profile successfully"
                  payload:
                    type: object
                    example: {}

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  ### Payment
  # User Wallet Information
  /payment/api/v1/me/wallet:
    get:
      tags:
        - Payment Service
      description: >-
        User get his/her wallet
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "success"
                  payload:
                    type: object
                    $ref: "#/components/schemas/WalletResponse"
        "404":
          description: User have no wallet
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    default: false
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "You have no wallet"
                  payload:
                    type: object
                    default: {}
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"


  # Make transfer from me to other
  /payment/api/v1/me/createTransfer:
    post:
      tags:
        - Payment Service
      description: >-
        User transfer money to another.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferForm"
        description: User login to the app
      responses:
        "200":
          description: Transfer successfully
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Transfer successfully"
                  payload:
                    type: object
                    example: {}
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "400":
          description: "Error when: soft token cannot decode, "
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"


  /payment/api/v1/me/topup:
    post:
      tags:
        - Payment Service
      description: >-
        Login to the system
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopupForm"
        description: User login to the app
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopupResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"


  /payment/api/v1/me/getTransferStatement:
    get:
      tags:
        - Payment Service
      description: >-
        Login to the system
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
        - in: query
          name: offset
          description: offset for pagination
          schema:
            type: number
          required: false
          example: 1
        - in: query
          name: limit
          description: size of page
          schema:
            type: number
          required: false
          example: 10
      responses:
        "200":
          description: Get transfer successfully
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Get transfer successfully"
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/TransferStatementDTO"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"

  /payment/api/v1/me/createWallet:
    post:
      tags:
        - Payment Service
      description: Create wallet
      responses:
        "201":
          description: Create wallet successfully
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: "Create wallet successfully"
                  payload:
                    $ref: "#/components/schemas/WalletDTO"
        "400":
          description: Error if user had wallet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"

  /payment/api/v1/me/hasWallet:
    get:
      tags:
        - Payment Service
      description:
        Check whether user had wallet
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      responses:
        "200":
          description: No error
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Message"
                  payload:
                    type: object
                    properties:
                      hasWallet:
                        type: boolean
                        example: true
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"

  # Service Wallet Information
  /payment/api/v1/systems/getAllWallets:
    get:
      tags:
        - Payment Service
      description: >-
        System get all wallet
      parameters:
        - in: header
          name: Authorization
          description: Bearer system token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletSystemResponse"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"


  /payment/api/v1/systems/createTransferFromUser:
    post:
      tags:
        - Payment Service
      description: >-
        Create transfer from user
      parameters:
        - in: header
          name: Authorization
          description: Bearer system token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemCreateTransferFromUserRequest"
        description: User login to the app
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Message"
                  payload:
                    type: object
                    properties:
                      amount:
                        type: number
                        example: 30000
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"



  /payment/api/v1/systems/createTransferToUser:
    post:
      tags:
        - Payment Service
      description: >-
        Create transfer to user
      parameters:
        - in: header
          name: Authorization
          description: Bearer system token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemCreateTransferToUserRequest"
        description: Create transfer to user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Transfer to user successfully"
                  payload:
                    type: string
                    example: "nothing"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"

  ### Lucky Money

  # Create Lucky Money from user to a group chat
  /lucky/api/v1/createLuckyMoney:
    post:
      tags:
        - LuckyMoney Service
      description: >-
        Create lucky money
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLuckyMoneyForm"
        description: Create lucky money request
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: "Create lucky money successfully"
                  payload:
                    type: string
                    example: "nothing"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500"
  #
  /lucky/api/v1/getAllLuckyMoney:
    get:
      tags:
        - LuckyMoney Service
      description: >-
        Login to the system

      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
        - in: query
          name: sessionId
          description: session ID
          required: true
          schema:
            type: string
            example: dc190303aea87bdf6e4faa3d59de
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Create lucky money successfully"
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/LuckyMoneyDTO"
        "400":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "406":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error406"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500"

  /lucky/api/v1/receiveLuckyMoney:
    post:
      tags:
        - LuckyMoney Service
      description: >-
        Receive lucky money
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecieveLuckyMoneyForm"
        description: Receive lucky money request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Receive lucky money successfully"
                  payload:
                    type: string
                    example: "nothing"
        "400":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "406":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error406"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500"

  /lucky/api/v1/getDetailsLuckyMoney:
    get:
      tags:
        - LuckyMoney Service
      description: >-
        Get details lucky money
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          schema:
            type: string
          required: true
          example: Bearer kasfdkjajfjaf.kjadsfkjakjfdhjagae.rkjsdkjakjdsf
        - in: query
          name: luckyMoneyId
          schema:
            type: number
          required: true
          example: 123
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Receive lucky money successfully"
                  payload:
                    $ref: "#/components/schemas/LuckyMoneyDetails"
        "400":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "406":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error406"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500"

  ### Chat

  /chat/api/public/register:
    post:
      tags:
        - Chat Service
      description: >-
        Register to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRegisterForm"
        description: User register to the chat app
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 201
                    example: 201
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  /chat/api/protected/chatlist:
    post:
      tags:
        - Chat Service
      description: >-
        User Get Chat List
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of user

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Upload successfully"
                  payload:
                    type: object
                    $ref: "#/components/schemas/ChatListResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  /chat/api/v1/systems/createTransferMessage:
    post:
      tags:
        - Chat Service
      description: >-
        Payment sends transfer message to Chat
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferMessageRequest"
        description: Payment sends message to Chat
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  /chat/api/v1/systems/createLuckyMoneyMessage:
    post:
      tags:
        - Chat Service
      description: >-
        Payment sends create lucky money message to Chat
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LuckyMoneyMessageRequest"
        description: Payment sends message to Chat
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  /chat/api/v1/systems/isUserExistInSession:
    post:
      tags:
        - Chat Service
      description: >-
        Lucky call api to check user is in session to Chat
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIdSessionIdRequest"
        description: Lucky sends message to Chat
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  /chat/api/v1/systems/receiveLuckyMoneyMessage:
    post:
      tags:
        - Chat Service
      description: >-
        Lucky call api to receive lucky money message Chat
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceiveLuckyMoneyMessageRequest"
        description: Lucky sends message to Chat
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    default: {}
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/addressbook:
    post:
      tags:
        - Chat Service
      description: >-
        Lucky call api to receive lucky money message Chat
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/AddressBookItem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/waittingfriend:
    post:
      tags:
        - Chat Service
      description: >-
        Get list add friend request
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/AddressBookItem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/closewaittingfriend:
    post:
      tags:
        - Chat Service
      description: >-
        Delete add friend request
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSessionIdRequest"
        description: Request close add friend request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"

  /chat/api/protected/usernameexisted:
    post:
      tags:
        - Chat Service
      description: >-
        Check username is existed
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsernameExistedRequest"
        description: Username is existed request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    $ref: "#/components/schemas/UsernameExistedResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/sessionbyuserid:
    post:
      tags:
        - Chat Service
      description: >-
        Get session id by user id
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSessionIdRequest"
        description: Get session id by user id request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    $ref: "#/components/schemas/GetSessionIdResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/waittingchatheader:
    post:
      tags:
        - Chat Service
      description: >-
        Get waitting chat header
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WaittingChatHeaderRequest"
        description: Get session id by user id request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    $ref: "#/components/schemas/WaittingChatHeaderResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/addfriend:
    post:
      tags:
        - Chat Service
      description: >-
        Accept add friend request
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddFriendRequest"
        description: Accept add friend request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    $ref: "#/components/schemas/AddFriendResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/status:
    post:
      tags:
        - Chat Service
      description: >-
        Change status
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeStatusRequest"
        description: Change status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    type: object
                    properties:
                      message: 
                        type: string
                        example: success
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/user:
    post:
      tags:
        - Chat Service
      description: >-
        Get profile
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Request successfully"
                  payload:
                    $ref: "#/components/schemas/UserProfileResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/edit:
    post:
      tags:
        - Chat Service
      description: >-
        Get profile
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditProfileRequest"
        description: Get profile request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Edit profile successfully"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/editgroupname:
    post:
      tags:
        - Chat Service
      description: >-
        Edit group name
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditGroupNameRequest"
        description: Edit group name request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Edit group name successfully"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/kickmember:
    post:
      tags:
        - Chat Service
      description: >-
        Remove member from group chat
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KickMemberRequest"
        description: kick member request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Kick member successfully"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/outgroup:
    post:
      tags:
        - Chat Service
      description: >-
        Leavegroup chat
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutGroupRequest"
        description: Leave group request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Out group successfully"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/getUserOfSessionChat:
    post:
      tags:
        - Chat Service
      description: >-
        Get member of session chat
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMemberOfSessionRequest"
        description: Get member of session chat request
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: ""
                  payload:
                    $ref: "#/components/schemas/GetMemerOfSessionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/addfriendrequest:
    post:
      tags:
        - Chat Service
      description: >-
        Add friend reuqest
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddFriendRequest"
        description: Add friend reuqest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: ""
                  payload:
                    $ref: "#/components/schemas/AddressBookItem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/addfriendtosession:
    post:
      tags:
        - Chat Service
      description: >-
        Add friend to session
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddFriendToSessionRequest"
        description: Add friend to session reuqest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "true"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/makeCall:
    post:
      tags:
        - Chat Service
      description: >-
        Make a call
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MakeCallRequest"
        description: Make a call reuqest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Make call successfully"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/joinCall:
    post:
      tags:
        - Chat Service
      description: >-
        Join a call
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JoinCallRequest"
        description: Join a call reuqest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Join call successfully"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/getICEServer:
    post:
      tags:
        - Chat Service
      description: >-
        Join a call
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
     
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Join call successfully"
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/ICEServerInfo"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
  /chat/api/protected/rejectCall:
    post:
      tags:
        - Chat Service
      description: >-
        Reject a call
      parameters:
        - in: header
          name: jwt
          schema:
            type: string
          required: true
          example: sas8asa8s8asa0sd0as6ad5d9as6d7fs9sf6sd9ds
          description: JWT of system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectCallRequest"
        description: Reject a call reuqest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - code
                  - message
                properties:
                  success:
                    type: boolean
                    default: true
                    example: true
                  code:
                    type: integer
                    default: 200
                    example: 200
                  message:
                    type: string
                    default: "Reject call successfully"
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
components:
  schemas:
    RejectCallRequest:
      type: object
      properties:
        sessionId:
          type: string
          example: uuid
    ICEServerInfo:
      type: object
      properties:
        username:
          type: string
          example: ngoctrong
        url:
          type: string
          example: stun:stun.heypay.top
        credential:
          type: string
          example: passwordiceserver
    JoinCallRequest:
      type: object
      properties:
        sessionId:
          type: string
          example: uuid-session-id
        peerId:
          type: string
          example: uuid-peer-id
    MakeCallRequest:
      type: object
      properties:
        isVideoCall:
          type: boolean
          example: true
        sessionId:
          type: string
          example: uuid
    AddFriendToSessionRequest:
      type: object
      properties:
        sessionId:
          type: string
          example: uuid
        userId:
          type: string
          example: userid

    GetMemerOfSessionResponse:
      type: object
      properties:
        isOwner:
          type: boolean
          example: true
        members:
          type: array
          items:
            $ref: "#/components/schemas/UserHash"
        
    UserHash:
      type: object
      properties:
        userId:
          type: string
          example: uuid
        fullName:
          type: string
          example: Vo Ngoc Trong
    GetMemberOfSessionRequest:
      type: object
      properties:
        sessionId:
          type: string
          example: uuid
    OutGroupRequest:
      type: object
      properties:
        sessionId:
          type: string
          example: uuid-session-id
    KickMemberRequest:
      type: object
      properties:
        sessionId:
          type: string
          example: uuid-session-id
        memberId:
          type: string
          example: uuid-member-id
    EditGroupNameRequest:
      type: object
      properties:
        sessionId:
          type: string
          example: uuid
        groupName:
          type: string
          example: Group name
    UserProfileResponse:
      type: object
      properties:
        userFullName:
          type: string
          example: Vo Ngoc Trong
        userName:
          type: string
          example: ngoctrong102
        status:
          type: string
          example: happy
    
    EditProfileRequest:
      type: object
      properties:
        email:
          type: string
          example: trong@gmail.com
        fullName:
          type: string
          example: Vo Ngoc Trong
        dob:
          type: string
          example: "2000-10-04T20:20:20"
        phoneNumber:
          type: string
          example: 0123473909
    ChangeStatusRequest:
      type: object
      properties:
        status:
          type: string
          example: I'm hungry
    AddFriendResponse:
      type: object
      properties:
        item:
          $ref: "#/components/schemas/AddressBookItem"
    AddFriendRequest:
      type: object
      properties:
        username:
          type: string
          example: trong102
    WaittingChatHeaderResponse:
      type: object
      properties:
        title:
          type: string
          example: Group header
    WaittingChatHeaderRequest:
      type: object
      properties:
        usernames:
          type: array
          items:
            type: string
            example: an
        groupName:
          type: string
          example: Group chat
    
    GetSessionIdResponse:
      type: object
      properties:
        sessionId:
          type: string
          example: uuid
          
    UsernameExistedResponse:
      type: object
      properties:
        existed:
          type: boolean
          example: false
        username:
          type: string
          example: trong
    UsernameExistedRequest:
      type: object
      properties:
        username:
          type: string
          example: trong
        
    GetSessionIdRequest:
      type: object
      properties:
        userId:
          type: string
          example: uuid
        
    UserDTO:
      type: object
      properties:
        id:
          type: string
          example: uuid
        username:
          type: string
          example: anlg2
        fullName:
          type: string
          example: Trinh An
        dob:
          type: string
          example: 2000:02:02T19:02:02
        phoneNumber:
          type: string
          example: 095786494
        avatar:
          type: string
          example: file.png
        mediumAvatar:
          type: string
          example: file_400.png
        smallAvatar:
          type: string
          example: file_50.png
    SystemDTO:
      type: object
      properties:
        id:
          type: string
          example: uuid
        systemName:
          type: string
          example: lucky
        numberOfWallet:
          type: integer
          example: 10
    WalletDTO:
      type: object
      properties:
        balance:
          type: number
          example: 0
    LuckyMoneyDetails:
      type: object
      properties:
        wishMessage:
          type: string
          example: Happy new year
        userCreated:
          $ref: "#/components/schemas/UserInfo"
        usersReceived:
          type: array
          items:
            $ref: "#/components/schemas/UserReceiveInfo"
        totalBag:
          type: number
          example: 20
        restBag:
          type: number
          example: 12
        type:
          type: string
          example: random
        restMoney:
          type: number
          example: 10000
        totalMoney:
          type: number
          example: 200000

    UserReceiveInfo:
      type: object
      properties:
        fullName:
          type: string
          example: "Vo Ngoc Trong"
        amount:
          type: number
          example: 20000
        receivedAt:
          type: string
          example: "2000-10-04T20:23:45"
    TransferStatementDTO:
      type: object
      required:
        - source
        - target
        - amount
        - status
        - transferType
      properties:
        source:
          $ref: "#/components/schemas/OwnerInfo"
        target:
          $ref: "#/components/schemas/OwnerInfo"
        transferCode:
          type: string
          example: Code transfer
        amount:
          type: number
          example: 20000
        status:
          type: number
          example: 2
        description:
          type: string
          example: This is description
        transferFee:
          type: number
          example: 200
        transferType:
          type: string
          example: Topup
    LuckyMoneyDTO:
      type: object
      properties:
        senderName:
          type: string
          example: Ngoc Trong
        luckyMoneyId:
          type: number
          example: 123
        isReceived:
          type: boolean
          example: true
        receivedMoney:
          type: number
          example: 20000
        receivedAt:
          type: string
          example: "2000-10-04T20:20:20"
        wishMessage:
          type: string
          example: Happy new year
        restBag:
          type: number
          example: 10
        totalBag:
          type: number
          example: 15
        totalMoney:
          type: number
          example: 100000
        isExpired:
          type: boolean
          example: false
    SystemCreateTransferFromUserRequest:
      type: object
      properties:
        userId:
          type: string
          example: uuid-123
        walletId:
          type: number
          example: 1234
        softToken:
          type: string
          example: adsfadsfafd.fafafafafsfdadsf.dfasdfafdasf
        message:
          type: string
          example: Happy new year
        amount:
          type: number
          example: 30000

    OwnerInfo:
      type: object
      properties:
        id:
          type: string
          example: uuid
        name:
          type: string
          example: User full name or system name
    LoginForm:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: anlg2
        password:
          type: string
          example: anlg2@123
    CreateLuckyMoneyForm:
      type: object
      required:
        - softToken
        - message
        - sessionChatId
        - type
        - bagNumber
        - amount
      properties:
        softToken:
          type: string
          example: "adsf8asd9fasdfasdf9adsf7asdf"
        message:
          type: string
          example: "hello"
        sessionChatId:
          type: string
          example: "sa8s09sdas-109239ds-d9830432d"
        type:
          type: string
          example: "random"
        bagNumber:
          type: number
          example: 10
        amount:
          type: number
          example: 20000
    RecieveLuckyMoneyForm:
      type: object
      required:
        - luckyMoneyId
      properties:
        luckyMoneyId:
          type: number
          example: 7
    AuthorizeUserRequest:
      type: object
      required:
        - jwtUser
      properties:
        jwtUser:
          type: string
          example: ad8afsd7f8sdf8ad79af7af8adf9ad7
    AuthorizeSystemRequest:
      type: object
      required:
        - jwtUser
      properties:
        jwtSystem:
          type: string
          example: ad8afsd7f8sdf8ad79af7af8adf9ad7
    ServiceLoginForm:
      type: object
      required:
        - service_name
        - service_key
      properties:
        service_name:
          type: string
          example: anlg2
        service_key:
          type: string
          example: anlg2@123
    UserInfo:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          example: true
        code:
          type: number
          example: 200
        message:
          type: string
          example: "success"
        payload:
          type: object
          $ref: "#/components/schemas/UserInfoPayload"
    UserInfoPayload:
      type: object
      required:
        - id
        - username
        - email
        - fullname
      properties:
        id:
          type: number
          example: 1
        username:
          type: string
          example: "ngoctrong"
        email:
          type: string
          example: "trong@gmail.com"
        fullname:
          type: string
          example: "Vo Ngoc Trong"
    SystemInfo:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          example: true
        code:
          type: number
          example: 200
        message:
          type: string
          example: "success"
        payload:
          type: object
          $ref: "#/components/schemas/SystemInfoPayload"
    SystemInfoPayload:
      type: object
      required:
        - id
        - systemName
      properties:
        id:
          type: number
          example: 1
        systemName:
          type: string
          example: "chat"
    RegisterForm:
      type: object
      required:
        - username
        - password
        - fullName
        - email
      properties:
        username:
          type: string
          example: anlg2
        password:
          type: string
          example: anlg2@123
        fullName:
          type: string
          example: An
        email:
          type: string
          example: anlg2@vng.com.vn
    ChatRegisterForm:
      type: object
      required:
        - username
        - password
        - fullName
        - email
      properties:
        userName:
          type: string
          example: anlg2
        userId:
          type: string
          example: uuid
        fullName:
          type: string
          example: An

    WalletResponse:
      type: object
      required:
        - balance
      properties:
        balance:
          type: number
          example: 200000

    WalletInfo:
      type: object
      required:
        - walletId
        - balance
      properties:
        balance:
          type: number
          example: 200000
        walletId:
          type: number
          example: 123

    WalletSystemResponse:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          default: true
          example: true
        code:
          type: integer
          default: 200
          example: 200
        message:
          type: string
          default: "Message"
        payload:
          type: array
          items:
            $ref: "#/components/schemas/WalletInfo"

    TopupForm:
      type: object
      required:
        - amount
        - bank_id
      properties:
        amount:
          type: number
          example: 200000
        bank_id:
          type: string
          example: 123-abc-456

    TransferForm:
      type: object
      required:
        - targetId
        - softToken
        - amount
        - message
      properties:
        targetId:
          type: number
          example: 1
        softToken:
          type: string
          example: kadsfjasdkjf.yuakjefcsiukjewf.audsifkjanmewfcskj
        amount:
          type: number
          example: 100000
        message:
          type: string
          example: Goodbye!

    SystemCreateTransferToUserRequest:
      type: object
      required:
        - walletId
        - receiverId
        - amount
        - message
      properties:
        walletId:
          type: number
          example: 1
        receiverId:
          type: number
          example: 1
        amount:
          type: number
          example: 100000
        message:
          type: string
          example: Goodbye!

    TopupResponse:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          default: true
          example: true
        code:
          type: number
          default: 200
          example: 200
        message:
          type: string
          default: "Topup successfully"
        payload:
          type: object
          default: {}
          example: {}

    TransferMessageRequest:
      type: object
      required:
        - sourceId
        - targetId
        - amount
        - message
        - createdAt
      properties:
        sourceId:
          type: number
          example: 1
        targetId:
          type: number
          example: 2
        amount:
          type: number
          example: 50000
        message:
          type: string
          example: "Hello"
        createdAt:
          type: string
          example: "26/7/2021"

    LuckyMoneyMessageRequest:
      type: object
      required:
        - userId
        - sessionId
        - luckyMoneyId
        - message
        - createdAt
      properties:
        userId:
          type: number
          example: 1
        sessionId:
          type: string
          example: "ab43242f78fb"
        luckyMoneyId:
          type: number
          example: 1
        message:
          type: string
          example: "Hello"
        createdAt:
          type: string
          example: "26/7/2021"

    UserIdSessionIdRequest:
      type: object
      required:
        - userId
        - sessionId
      properties:
        userId:
          type: number
          example: 1
        sessionId:
          type: string
          example: "ab43242f78fb"
    AddressBookItem:
      type: object
      properties:
        name:
          type: string
          example: "trong"
        userId: 
          type: string
          example: uuid
        status:
          type: string
          example: you are online
        online:
          type: boolean
          example: true
        


    ReceiveLuckyMoneyMessageRequest:
      type: object
      required:
        - receiverId
        - sessionId
        - luckyMoneyId
        - amount
        - message
        - createdAt
      properties:
        receiverId:
          type: number
          example: 1
        sessionId:
          type: string
          example: "ab43242f78fb"
        luckyMoneyId:
          type: number
          example: 1
        amount:
          type: number
          example: 50000
        message:
          type: string
          example: "Hello"
        createdAt:
          type: string
          example: "26/7/2021"
    ChatListResponse:
      type: array
      required:
        - items
      items:
        $ref: "#/components/schemas/ChatListItem"

    ChatListItem:
      type: object
      required:
        - name
        - sessionId
        - lastMessage
        - unread
        - updatedDate
        - groupName
        - isGroup
        - userIds
      properties:
        name:
          type: string
          example: an
        sessionId:
          type: string
          example: abc
        lastMessage:
          type: string
          example: hello
        unread:
          type: number
          example: 1
        updatedDate:
          type: string
          example: "19/02/2021"
        groupName:
          type: string
          example: Group Test
        isGroup:
          type: boolean
          example: true
        userIds:
          type: array
          items:
            type: string
            example: uuid

    # =====================
    Error403:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          default: false
          example: false
        code:
          type: integer
          default: 403
          example: 403
        message:
          type: string
          default: "Forbidden"
        payload:
          type: object
          default: {}
          example: {}
    # =====================
    Error406:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          default: false
          example: false
        code:
          type: integer
          default: 406
          example: 406
        message:
          type: string
          default: "Not acceptable"
        payload:
          type: object
          default: {}
          example: {}
    # =====================
    Error400:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          default: false
          example: false
        code:
          type: integer
          default: 400
          example: 400
        message:
          type: string
          default: "Bad Request"
        payload:
          type: object
          default: {}
          example: {}
    # =====================
    Error500:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          default: false
          example: false
        code:
          type: integer
          default: 500
          example: 500
        message:
          type: string
          default: "Internal server error"
        payload:
          type: object
          default: {}
          example: {}
    # =====================
    Error401:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          default: false
          example: false
        code:
          type: integer
          default: 401
          example: 401
        message:
          type: string
          default: "Unauthorized"
        payload:
          type: object
          default: {}
          example: {}
    # =====================
    Error404:
      type: object
      required:
        - success
        - code
        - message
        - payload
      properties:
        success:
          type: boolean
          default: false
          example: false
        code:
          type: integer
          default: 404
          example: 404
        message:
          type: string
          default: "Not Found"
        payload:
          type: object
          default: {}
          example: {}
